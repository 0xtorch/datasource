[
  {
    "description": "Ronin bridge deposit ETH function on Ethereum",
    "chainId": 1,
    "to": ["0x64192819ac13ef72bf6b5ae239ac672b43a9af08"],
    "value": "plus",
    "functionSignature": "0x4b14557e",
    "functionInterface": "requestDepositFor(tuple)",
    "logsPatterns": [
      {
        "matchType": "exact",
        "items": [
          {
            "name": "DepositRequested",
            "signature": "0xd7b25068d9dc8d00765254cfb7f5070f98d263c8d68931d937c7362fa738048b",
            "indexedCount": 0
          }
        ]
      }
    ],
    "internalsPatterns": [
      {
        "type": "partial",
        "value": "plus",
        "count": 0
      }
    ],
    "generators": [
      {
        "action": "bridge-from",
        "crossId": [
          "ronin-bridge_",
          {
            "type": "log",
            "signature": "0xd7b25068d9dc8d00765254cfb7f5070f98d263c8d68931d937c7362fa738048b",
            "indexedCount": 0,
            "index": 0,
            "argIndex": 0,
            "valueType": "other"
          }
        ],
        "crossType": "start",
        "transfers": [
          {
            "type": "value",
            "direction": "out"
          }
        ]
      }
    ]
  },
  {
    "description": "Ronin bridge deposit ERC20 function on Ethereum",
    "chainId": 1,
    "to": ["0x64192819ac13ef72bf6b5ae239ac672b43a9af08"],
    "value": "zero",
    "functionSignature": "0x4b14557e",
    "functionInterface": "requestDepositFor(tuple)",
    "logsPatterns": [
      {
        "matchType": "exact",
        "items": [
          {
            "name": "Transfer",
            "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "indexedCount": 2
          },
          {
            "name": "Approval",
            "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "indexedCount": 2
          },
          {
            "name": "DepositRequested",
            "signature": "0xd7b25068d9dc8d00765254cfb7f5070f98d263c8d68931d937c7362fa738048b",
            "indexedCount": 0
          }
        ]
      }
    ],
    "internalsPatterns": [
      {
        "type": "partial",
        "value": "plus",
        "count": 0
      }
    ],
    "parameterMatchPatterns": [
      {
        "description": "from === Transfer[0].from",
        "base": {
          "type": "from"
        },
        "compare": {
          "type": "log",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "indexedCount": 2,
          "index": 0,
          "argIndex": 0
        }
      }
    ],
    "generators": [
      {
        "action": "bridge-from",
        "crossId": [
          "ronin-bridge_",
          {
            "type": "log",
            "signature": "0xd7b25068d9dc8d00765254cfb7f5070f98d263c8d68931d937c7362fa738048b",
            "indexedCount": 0,
            "index": 0,
            "argIndex": 0,
            "valueType": "other"
          }
        ],
        "crossType": "start",
        "transfers": [
          {
            "type": "erc20",
            "index": 0,
            "direction": "out"
          }
        ]
      }
    ]
  }
]
